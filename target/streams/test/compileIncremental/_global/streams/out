[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 6 products, 2 sources, 2 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/test/scala/Test1.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(${BASE}/src/test/scala/test2.scala), changed = Set(${BASE}/src/test/scala/Test1.scala), unmodified = ...),Set(),Set(),API Changes: Set(NamesChange(text_adventure2.DataState$,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(DataState;init;$,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(value,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(map,[Default]), UsedName(DataState,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(DataState;init;,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.DataState,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(DataState;init;$,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(value,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(map,[Default]), UsedName(DataState,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(DataState;init;,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.ValidCommand,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(ValidCommand,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ordinal,[Default]), UsedName(ValidCommand;init;,[Default]), UsedName(toString,[Default]), UsedName(Enum;init;,[Default]), UsedName(Hear,[Default]), UsedName(!=,[Default]), UsedName(Look,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Touch,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(Taste,[Default]), UsedName(fromOrdinal,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(values,[Default]), UsedName(Object;init;,[Default]), UsedName(ValidCommand;init;$,[Default]), UsedName(Smell,[Default]), UsedName(equals,[Default]), UsedName(Go,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sum;init;,[Default]), UsedName(notImplemented,[Default]), UsedName(valueOf,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Quit,[Default]), UsedName(Inventory,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure.ValidCommand,ModifiedNames(changes = UsedName(ValidCommand,[Default]), UsedName(Exit,[Default]), UsedName(Quit,[Default]))), NamesChange(text_adventure.Room$,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(Room,[Default]), UsedName(apply,[Default]), UsedName(Named;init;,[Default]), UsedName(name,[Default]), UsedName(Room;init;,[Default]), UsedName(getItem,[Default]), UsedName(Sensible;init;,[Default]), UsedName(copy,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(sense,[Default]), UsedName(description,[Default]))), NamesChange(text_adventure2.MetaCommand,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ordinal,[Default]), UsedName(toString,[Default]), UsedName(Enum;init;,[Default]), UsedName(MetaCommand;init;,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(fromOrdinal,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(MetaCommand;init;$,[Default]), UsedName(values,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(MetaCommand,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sum;init;,[Default]), UsedName(valueOf,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Quit,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.Room,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(copy$default$3,[Default]), UsedName(Room,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Room;init;$,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName(itemNotFoundMsg,[Default]), UsedName(HasItems;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(Room;init;,[Default]), UsedName(getItem,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(_3,[Default]), UsedName(items,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure.State,ModifiedNames(changes = UsedName(stateObjects,[Default]), UsedName(tempData,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(State,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(State;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]))), NamesChange(text_adventure2.ValidCommand$,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(ValidCommand,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ordinal,[Default]), UsedName(ValidCommand;init;,[Default]), UsedName(toString,[Default]), UsedName(Enum;init;,[Default]), UsedName(Hear,[Default]), UsedName(!=,[Default]), UsedName(Look,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Touch,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(Taste,[Default]), UsedName(fromOrdinal,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(values,[Default]), UsedName(Object;init;,[Default]), UsedName(ValidCommand;init;$,[Default]), UsedName(Smell,[Default]), UsedName(equals,[Default]), UsedName(Go,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sum;init;,[Default]), UsedName(notImplemented,[Default]), UsedName(valueOf,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Quit,[Default]), UsedName(Inventory,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.RenderState,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(state,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(RenderState;init;$,[Default]), UsedName(toString,[Default]), UsedName(RenderState;init;,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(RenderState,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.Item,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Item;init;,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(Item,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Item;init;$,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.RoomDirectory$,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(RoomDirectory,[Default]), UsedName(RoomDirectory;init;$,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(RoomDirectory;init;,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(roomMap,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.TxtAdvState,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(copy$default$3,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(metaCommand,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(directory,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(room,[Default]), UsedName(TxtAdvState;init;$,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(_3,[Default]), UsedName(TxtAdvState;init;,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(TxtAdvState,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.SenseProps,ModifiedNames(changes = UsedName($lessinit$greater$default$2,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(smell,[Default]), UsedName(SenseProps,[Default]), UsedName(wait,[Default]), UsedName($lessinit$greater$default$3,[Default]), UsedName(notify,[Default]), UsedName(hear,[Default]), UsedName(look,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName($lessinit$greater$default$5,[Default]), UsedName(asInstanceOf,[Default]), UsedName($lessinit$greater$default$4,[Default]), UsedName(SenseProps;init;$,[Default]), UsedName($lessinit$greater$default$1,[Default]), UsedName(clone,[Default]), UsedName(touch,[Default]), UsedName(taste,[Default]), UsedName(SenseProps;init;,[Default]), UsedName(==,[Default]))), NamesChange(text_adventure2.TxtAdvState$,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(copy$default$3,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(metaCommand,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(directory,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(room,[Default]), UsedName(TxtAdvState;init;$,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(_3,[Default]), UsedName(TxtAdvState;init;,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(TxtAdvState,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.RenderState$,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(state,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(RenderState;init;$,[Default]), UsedName(toString,[Default]), UsedName(RenderState;init;,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(RenderState,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.Sensible,ModifiedNames(changes = UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sensible,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]))), NamesChange(text_adventure2.RoomDirectory,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(RoomDirectory,[Default]), UsedName(RoomDirectory;init;$,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(RoomDirectory;init;,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(roomMap,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.Item$,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Item;init;,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(Item,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Item;init;$,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure.RoomDirectory,ModifiedNames(changes = UsedName(apply,[Default]), UsedName(navigate,[Default]), UsedName(RoomDirectory;init;,[Default]), UsedName(copy,[Default]), UsedName(roomMap,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(roomList,[Default]))), NamesChange(text_adventure.Room,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(Room,[Default]), UsedName(apply,[Default]), UsedName(Named;init;,[Default]), UsedName(name,[Default]), UsedName(Room;init;,[Default]), UsedName(getItem,[Default]), UsedName(Sensible;init;,[Default]), UsedName(copy,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(sense,[Default]), UsedName(description,[Default]))), NamesChange(text_adventure.Main$package$,ModifiedNames(changes = UsedName(text_adventure_state_loop,[Default]), UsedName(goCommand,[Default]), UsedName(renderState,[Default]), UsedName(testRoom,[Default]), UsedName(mainRoomSenseProps,[Default]), UsedName(actOnItemInList_generic,[Default]), UsedName(validateInput,[Default]), UsedName(roomState_loop,[Default]), UsedName(sideRoomSenseProps,[Default]), UsedName(testItem,[Default]), UsedName(senseItemCommand,[Default]), UsedName(inventory,[Default]), UsedName(doActionInRoom,[Default]), UsedName(hello,[Default]))), NamesChange(text_adventure.RoomDirectory$,ModifiedNames(changes = UsedName(apply,[Default]), UsedName(navigate,[Default]), UsedName(RoomDirectory;init;,[Default]), UsedName(copy,[Default]), UsedName(roomMap,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(roomList,[Default]))), NamesChange(text_adventure2.main2$package$,ModifiedNames(changes = UsedName(goCommand,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(sideRoom,[Default]), UsedName(desk_props,[Default]), UsedName(renderState,[Default]), UsedName(barrel_props,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(floor,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(mainRoomSenseProps,[Default]), UsedName(validateInput,[Default]), UsedName(sideRoom_objects,[Default]), UsedName(mainDirectory,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(floor_props,[Default]), UsedName(lint,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(sideRoomSenseProps,[Default]), UsedName(equals,[Default]), UsedName(roomObjects,[Default]), UsedName(barrel,[Default]), UsedName(senseItemCommand,[Default]), UsedName(doActionInRoom,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main2$package,[Default]), UsedName(hello,[Default]), UsedName(main2$package;init;$,[Default]), UsedName(mainRoom,[Default]), UsedName(clone,[Default]), UsedName(desk,[Default]), UsedName(==,[Default]))), NamesChange(text_adventure2.SenseProps$,ModifiedNames(changes = UsedName($lessinit$greater$default$2,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(smell,[Default]), UsedName(SenseProps,[Default]), UsedName(wait,[Default]), UsedName($lessinit$greater$default$3,[Default]), UsedName(notify,[Default]), UsedName(hear,[Default]), UsedName(look,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName($lessinit$greater$default$5,[Default]), UsedName(asInstanceOf,[Default]), UsedName($lessinit$greater$default$4,[Default]), UsedName(SenseProps;init;$,[Default]), UsedName($lessinit$greater$default$1,[Default]), UsedName(clone,[Default]), UsedName(touch,[Default]), UsedName(taste,[Default]), UsedName(SenseProps;init;,[Default]), UsedName(==,[Default]))), NamesChange(text_adventure2.Room$,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(copy$default$3,[Default]), UsedName(Room,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Room;init;$,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName(itemNotFoundMsg,[Default]), UsedName(HasItems;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(Room;init;,[Default]), UsedName(getItem,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(_3,[Default]), UsedName(items,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure.ValidCommand$,ModifiedNames(changes = UsedName(ValidCommand,[Default]), UsedName(Exit,[Default]), UsedName(Quit,[Default])))))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.DataState$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(DataState;init;$,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(value,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(map,[Default]), UsedName(DataState,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(DataState;init;,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.DataState$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.DataState$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(apply,[Default]), UsedName(DataState,[Default]), UsedName(_1,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.DataState has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(DataState;init;$,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(value,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(map,[Default]), UsedName(DataState,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(DataState;init;,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.DataState: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.DataState.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(apply,[Default]), UsedName(DataState,[Default]), UsedName(_1,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.ValidCommand has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MirroredMonoType,[Default]), UsedName(ValidCommand,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ordinal,[Default]), UsedName(ValidCommand;init;,[Default]), UsedName(toString,[Default]), UsedName(Enum;init;,[Default]), UsedName(Hear,[Default]), UsedName(!=,[Default]), UsedName(Look,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Touch,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(Taste,[Default]), UsedName(fromOrdinal,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(values,[Default]), UsedName(Object;init;,[Default]), UsedName(ValidCommand;init;$,[Default]), UsedName(Smell,[Default]), UsedName(equals,[Default]), UsedName(Go,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sum;init;,[Default]), UsedName(notImplemented,[Default]), UsedName(valueOf,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Quit,[Default]), UsedName(Inventory,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.ValidCommand: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.ValidCommand.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(ValidCommand,[Default]), UsedName(Look,[Default]), UsedName(name,[Default]), UsedName(Smell,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ValidateTests: Set(UsedName(ValidCommand,[Default]), UsedName(Look,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure.ValidCommand has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ValidCommand,[Default]), UsedName(Exit,[Default]), UsedName(Quit,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure.ValidCommand: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure.ValidCommand.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Look_Tests: Set(UsedName(ValidCommand,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure.Room$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(Room,[Default]), UsedName(apply,[Default]), UsedName(Named;init;,[Default]), UsedName(name,[Default]), UsedName(Room;init;,[Default]), UsedName(getItem,[Default]), UsedName(Sensible;init;,[Default]), UsedName(copy,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(sense,[Default]), UsedName(description,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure.Room$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure.Room$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Test1$package: Set(UsedName(Room,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.MetaCommand has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ordinal,[Default]), UsedName(toString,[Default]), UsedName(Enum;init;,[Default]), UsedName(MetaCommand;init;,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(fromOrdinal,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(MetaCommand;init;$,[Default]), UsedName(values,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(MetaCommand,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sum;init;,[Default]), UsedName(valueOf,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Quit,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.MetaCommand: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.MetaCommand.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(MetaCommand,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.Room has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(copy$default$3,[Default]), UsedName(Room,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Room;init;$,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName(itemNotFoundMsg,[Default]), UsedName(HasItems;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(Room;init;,[Default]), UsedName(getItem,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(_3,[Default]), UsedName(items,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.Room: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.Room.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(Room,[Default]), UsedName(apply,[Default]), UsedName(name,[Default]), UsedName(senseProps,[Default]), UsedName(sense,[Default]), UsedName(_1,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure.State has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(stateObjects,[Default]), UsedName(tempData,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(State,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(State;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure.State: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure.State.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Look_Tests: Set(UsedName(tempData,[Default]), UsedName(State,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.ValidCommand$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MirroredMonoType,[Default]), UsedName(ValidCommand,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ordinal,[Default]), UsedName(ValidCommand;init;,[Default]), UsedName(toString,[Default]), UsedName(Enum;init;,[Default]), UsedName(Hear,[Default]), UsedName(!=,[Default]), UsedName(Look,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Touch,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(Taste,[Default]), UsedName(fromOrdinal,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(values,[Default]), UsedName(Object;init;,[Default]), UsedName(ValidCommand;init;$,[Default]), UsedName(Smell,[Default]), UsedName(equals,[Default]), UsedName(Go,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sum;init;,[Default]), UsedName(notImplemented,[Default]), UsedName(valueOf,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Quit,[Default]), UsedName(Inventory,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.ValidCommand$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.ValidCommand$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(ValidCommand,[Default]), UsedName(Look,[Default]), UsedName(name,[Default]), UsedName(Smell,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ValidateTests: Set(UsedName(ValidCommand,[Default]), UsedName(Look,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.RenderState has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MirroredMonoType,[Default]), UsedName(state,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(RenderState;init;$,[Default]), UsedName(toString,[Default]), UsedName(RenderState;init;,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(RenderState,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.RenderState: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.RenderState.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(state,[Default]), UsedName(apply,[Default]), UsedName(RenderState,[Default]), UsedName(_1,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ValidateTests: Set(UsedName(apply,[Default]), UsedName(RenderState,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.Item has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Item;init;,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(Item,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Item;init;$,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.Item: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.Item.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(apply,[Default]), UsedName(Item,[Default]), UsedName(name,[Default]), UsedName(senseProps,[Default]), UsedName(sense,[Default]), UsedName(_1,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.RoomDirectory$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MirroredMonoType,[Default]), UsedName(RoomDirectory,[Default]), UsedName(RoomDirectory;init;$,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(RoomDirectory;init;,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(roomMap,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.RoomDirectory$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.RoomDirectory$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(RoomDirectory,[Default]), UsedName(apply,[Default]), UsedName(_1,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.TxtAdvState has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(copy$default$3,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(metaCommand,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(directory,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(room,[Default]), UsedName(TxtAdvState;init;$,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(_3,[Default]), UsedName(TxtAdvState;init;,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(TxtAdvState,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.TxtAdvState: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.TxtAdvState.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(apply,[Default]), UsedName(_1,[Default]), UsedName(TxtAdvState,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.SenseProps has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($lessinit$greater$default$2,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(smell,[Default]), UsedName(SenseProps,[Default]), UsedName(wait,[Default]), UsedName($lessinit$greater$default$3,[Default]), UsedName(notify,[Default]), UsedName(hear,[Default]), UsedName(look,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName($lessinit$greater$default$5,[Default]), UsedName(asInstanceOf,[Default]), UsedName($lessinit$greater$default$4,[Default]), UsedName(SenseProps;init;$,[Default]), UsedName($lessinit$greater$default$1,[Default]), UsedName(clone,[Default]), UsedName(touch,[Default]), UsedName(taste,[Default]), UsedName(SenseProps;init;,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.SenseProps: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.SenseProps.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName($lessinit$greater$default$2,[Default]), UsedName(apply,[Default]), UsedName(SenseProps,[Default]), UsedName($lessinit$greater$default$3,[Default]), UsedName(look,[Default]), UsedName($lessinit$greater$default$5,[Default]), UsedName($lessinit$greater$default$4,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.TxtAdvState$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(copy$default$3,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(metaCommand,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(directory,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(room,[Default]), UsedName(TxtAdvState;init;$,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(_3,[Default]), UsedName(TxtAdvState;init;,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(TxtAdvState,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.TxtAdvState$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.TxtAdvState$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(apply,[Default]), UsedName(_1,[Default]), UsedName(TxtAdvState,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.RenderState$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MirroredMonoType,[Default]), UsedName(state,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(RenderState;init;$,[Default]), UsedName(toString,[Default]), UsedName(RenderState;init;,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(RenderState,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.RenderState$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.RenderState$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ValidateTests: Set(UsedName(apply,[Default]), UsedName(RenderState,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.Sensible has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sensible,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.Sensible: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.Sensible.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(senseProps,[Default]), UsedName(sense,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.RoomDirectory has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MirroredMonoType,[Default]), UsedName(RoomDirectory,[Default]), UsedName(RoomDirectory;init;$,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(RoomDirectory;init;,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(roomMap,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.RoomDirectory: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.RoomDirectory.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(RoomDirectory,[Default]), UsedName(apply,[Default]), UsedName(_1,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.Item$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Item;init;,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(Item,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Item;init;$,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.Item$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.Item$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(apply,[Default]), UsedName(Item,[Default]), UsedName(name,[Default]), UsedName(senseProps,[Default]), UsedName(sense,[Default]), UsedName(_1,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure.RoomDirectory has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(apply,[Default]), UsedName(navigate,[Default]), UsedName(RoomDirectory;init;,[Default]), UsedName(copy,[Default]), UsedName(roomMap,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(roomList,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure.RoomDirectory: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure.RoomDirectory.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Look_Tests: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Test1$package: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure.Room has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(Room,[Default]), UsedName(apply,[Default]), UsedName(Named;init;,[Default]), UsedName(name,[Default]), UsedName(Room;init;,[Default]), UsedName(getItem,[Default]), UsedName(Sensible;init;,[Default]), UsedName(copy,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(sense,[Default]), UsedName(description,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure.Room: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure.Room.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Look_Tests: Set(UsedName(Room,[Default]), UsedName(apply,[Default]), UsedName(name,[Default]), UsedName(senseProps,[Default]), UsedName(sense,[Default]), UsedName(description,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Test1$package: Set(UsedName(Room,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure.Main$package$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(text_adventure_state_loop,[Default]), UsedName(goCommand,[Default]), UsedName(renderState,[Default]), UsedName(testRoom,[Default]), UsedName(mainRoomSenseProps,[Default]), UsedName(actOnItemInList_generic,[Default]), UsedName(validateInput,[Default]), UsedName(roomState_loop,[Default]), UsedName(sideRoomSenseProps,[Default]), UsedName(testItem,[Default]), UsedName(senseItemCommand,[Default]), UsedName(inventory,[Default]), UsedName(doActionInRoom,[Default]), UsedName(hello,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure.Main$package$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure.Main$package$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Look_Tests: Set(UsedName(testRoom,[Default]), UsedName(roomState_loop,[Default]), UsedName(testItem,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Test1$package: Set(UsedName(testRoom,[Default]), UsedName(testItem,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure.RoomDirectory$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(apply,[Default]), UsedName(navigate,[Default]), UsedName(RoomDirectory;init;,[Default]), UsedName(copy,[Default]), UsedName(roomMap,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(roomList,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure.RoomDirectory$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure.RoomDirectory$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Test1$package: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.main2$package$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(goCommand,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(sideRoom,[Default]), UsedName(desk_props,[Default]), UsedName(renderState,[Default]), UsedName(barrel_props,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(floor,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(mainRoomSenseProps,[Default]), UsedName(validateInput,[Default]), UsedName(sideRoom_objects,[Default]), UsedName(mainDirectory,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(floor_props,[Default]), UsedName(lint,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(sideRoomSenseProps,[Default]), UsedName(equals,[Default]), UsedName(roomObjects,[Default]), UsedName(barrel,[Default]), UsedName(senseItemCommand,[Default]), UsedName(doActionInRoom,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main2$package,[Default]), UsedName(hello,[Default]), UsedName(main2$package;init;$,[Default]), UsedName(mainRoom,[Default]), UsedName(clone,[Default]), UsedName(desk,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.main2$package$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.main2$package$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(doActionInRoom,[Default]), UsedName(main2$package,[Default]), UsedName(mainRoom,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ValidateTests: Set(UsedName(validateInput,[Default]), UsedName(main2$package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.SenseProps$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($lessinit$greater$default$2,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(smell,[Default]), UsedName(SenseProps,[Default]), UsedName(wait,[Default]), UsedName($lessinit$greater$default$3,[Default]), UsedName(notify,[Default]), UsedName(hear,[Default]), UsedName(look,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName($lessinit$greater$default$5,[Default]), UsedName(asInstanceOf,[Default]), UsedName($lessinit$greater$default$4,[Default]), UsedName(SenseProps;init;$,[Default]), UsedName($lessinit$greater$default$1,[Default]), UsedName(clone,[Default]), UsedName(touch,[Default]), UsedName(taste,[Default]), UsedName(SenseProps;init;,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.SenseProps$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.SenseProps$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName($lessinit$greater$default$2,[Default]), UsedName(apply,[Default]), UsedName(SenseProps,[Default]), UsedName($lessinit$greater$default$3,[Default]), UsedName(look,[Default]), UsedName($lessinit$greater$default$5,[Default]), UsedName($lessinit$greater$default$4,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure2.Room$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(copy$default$3,[Default]), UsedName(Room,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Room;init;$,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName(itemNotFoundMsg,[Default]), UsedName(HasItems;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(Room;init;,[Default]), UsedName(getItem,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(_3,[Default]), UsedName(items,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure2.Room$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure2.Room$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CommandTests: Set(UsedName(Room,[Default]), UsedName(apply,[Default]), UsedName(name,[Default]), UsedName(senseProps,[Default]), UsedName(sense,[Default]), UsedName(_1,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe text_adventure.ValidCommand$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ValidCommand,[Default]), UsedName(Exit,[Default]), UsedName(Quit,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) text_adventure.ValidCommand$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) text_adventure.ValidCommand$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Look_Tests: Set(UsedName(ValidCommand,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set(${BASE}/src/test/scala/test2.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/test/scala/Test1.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(text_adventure2.DataState$,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(DataState;init;$,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(value,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(map,[Default]), UsedName(DataState,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(DataState;init;,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.DataState,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(DataState;init;$,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(value,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(map,[Default]), UsedName(DataState,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(DataState;init;,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.ValidCommand,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(ValidCommand,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ordinal,[Default]), UsedName(ValidCommand;init;,[Default]), UsedName(toString,[Default]), UsedName(Enum;init;,[Default]), UsedName(Hear,[Default]), UsedName(!=,[Default]), UsedName(Look,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Touch,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(Taste,[Default]), UsedName(fromOrdinal,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(values,[Default]), UsedName(Object;init;,[Default]), UsedName(ValidCommand;init;$,[Default]), UsedName(Smell,[Default]), UsedName(equals,[Default]), UsedName(Go,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sum;init;,[Default]), UsedName(notImplemented,[Default]), UsedName(valueOf,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Quit,[Default]), UsedName(Inventory,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure.ValidCommand,ModifiedNames(changes = UsedName(ValidCommand,[Default]), UsedName(Exit,[Default]), UsedName(Quit,[Default]))), NamesChange(text_adventure.Room$,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(Room,[Default]), UsedName(apply,[Default]), UsedName(Named;init;,[Default]), UsedName(name,[Default]), UsedName(Room;init;,[Default]), UsedName(getItem,[Default]), UsedName(Sensible;init;,[Default]), UsedName(copy,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(sense,[Default]), UsedName(description,[Default]))), NamesChange(text_adventure2.MetaCommand,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ordinal,[Default]), UsedName(toString,[Default]), UsedName(Enum;init;,[Default]), UsedName(MetaCommand;init;,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(fromOrdinal,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(MetaCommand;init;$,[Default]), UsedName(values,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(MetaCommand,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sum;init;,[Default]), UsedName(valueOf,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Quit,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.Room,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(copy$default$3,[Default]), UsedName(Room,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Room;init;$,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName(itemNotFoundMsg,[Default]), UsedName(HasItems;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(Room;init;,[Default]), UsedName(getItem,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(_3,[Default]), UsedName(items,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure.State,ModifiedNames(changes = UsedName(stateObjects,[Default]), UsedName(tempData,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(State,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(State;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]))), NamesChange(text_adventure2.ValidCommand$,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(ValidCommand,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ordinal,[Default]), UsedName(ValidCommand;init;,[Default]), UsedName(toString,[Default]), UsedName(Enum;init;,[Default]), UsedName(Hear,[Default]), UsedName(!=,[Default]), UsedName(Look,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Touch,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(Taste,[Default]), UsedName(fromOrdinal,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(values,[Default]), UsedName(Object;init;,[Default]), UsedName(ValidCommand;init;$,[Default]), UsedName(Smell,[Default]), UsedName(equals,[Default]), UsedName(Go,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sum;init;,[Default]), UsedName(notImplemented,[Default]), UsedName(valueOf,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Quit,[Default]), UsedName(Inventory,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.RenderState,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(state,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(RenderState;init;$,[Default]), UsedName(toString,[Default]), UsedName(RenderState;init;,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(RenderState,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.Item,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Item;init;,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(Item,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Item;init;$,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.RoomDirectory$,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(RoomDirectory,[Default]), UsedName(RoomDirectory;init;$,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(RoomDirectory;init;,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(roomMap,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.TxtAdvState,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(copy$default$3,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(metaCommand,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(directory,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(room,[Default]), UsedName(TxtAdvState;init;$,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(_3,[Default]), UsedName(TxtAdvState;init;,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(TxtAdvState,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.SenseProps,ModifiedNames(changes = UsedName($lessinit$greater$default$2,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(smell,[Default]), UsedName(SenseProps,[Default]), UsedName(wait,[Default]), UsedName($lessinit$greater$default$3,[Default]), UsedName(notify,[Default]), UsedName(hear,[Default]), UsedName(look,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName($lessinit$greater$default$5,[Default]), UsedName(asInstanceOf,[Default]), UsedName($lessinit$greater$default$4,[Default]), UsedName(SenseProps;init;$,[Default]), UsedName($lessinit$greater$default$1,[Default]), UsedName(clone,[Default]), UsedName(touch,[Default]), UsedName(taste,[Default]), UsedName(SenseProps;init;,[Default]), UsedName(==,[Default]))), NamesChange(text_adventure2.TxtAdvState$,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(copy$default$3,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(metaCommand,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(directory,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(room,[Default]), UsedName(TxtAdvState;init;$,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(_3,[Default]), UsedName(TxtAdvState;init;,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(TxtAdvState,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.RenderState$,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(state,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(RenderState;init;$,[Default]), UsedName(toString,[Default]), UsedName(RenderState;init;,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(RenderState,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.Sensible,ModifiedNames(changes = UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sensible,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]))), NamesChange(text_adventure2.RoomDirectory,ModifiedNames(changes = UsedName(MirroredMonoType,[Default]), UsedName(RoomDirectory,[Default]), UsedName(RoomDirectory;init;$,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(RoomDirectory;init;,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName(roomMap,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure2.Item$,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Item;init;,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(Item,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(Item;init;$,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure.RoomDirectory,ModifiedNames(changes = UsedName(apply,[Default]), UsedName(navigate,[Default]), UsedName(RoomDirectory;init;,[Default]), UsedName(copy,[Default]), UsedName(roomMap,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(roomList,[Default]))), NamesChange(text_adventure.Room,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(Room,[Default]), UsedName(apply,[Default]), UsedName(Named;init;,[Default]), UsedName(name,[Default]), UsedName(Room;init;,[Default]), UsedName(getItem,[Default]), UsedName(Sensible;init;,[Default]), UsedName(copy,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(sense,[Default]), UsedName(description,[Default]))), NamesChange(text_adventure.Main$package$,ModifiedNames(changes = UsedName(text_adventure_state_loop,[Default]), UsedName(goCommand,[Default]), UsedName(renderState,[Default]), UsedName(testRoom,[Default]), UsedName(mainRoomSenseProps,[Default]), UsedName(actOnItemInList_generic,[Default]), UsedName(validateInput,[Default]), UsedName(roomState_loop,[Default]), UsedName(sideRoomSenseProps,[Default]), UsedName(testItem,[Default]), UsedName(senseItemCommand,[Default]), UsedName(inventory,[Default]), UsedName(doActionInRoom,[Default]), UsedName(hello,[Default]))), NamesChange(text_adventure.RoomDirectory$,ModifiedNames(changes = UsedName(apply,[Default]), UsedName(navigate,[Default]), UsedName(RoomDirectory;init;,[Default]), UsedName(copy,[Default]), UsedName(roomMap,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(roomList,[Default]))), NamesChange(text_adventure2.main2$package$,ModifiedNames(changes = UsedName(goCommand,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(sideRoom,[Default]), UsedName(desk_props,[Default]), UsedName(renderState,[Default]), UsedName(barrel_props,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(floor,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(mainRoomSenseProps,[Default]), UsedName(validateInput,[Default]), UsedName(sideRoom_objects,[Default]), UsedName(mainDirectory,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(floor_props,[Default]), UsedName(lint,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(sideRoomSenseProps,[Default]), UsedName(equals,[Default]), UsedName(roomObjects,[Default]), UsedName(barrel,[Default]), UsedName(senseItemCommand,[Default]), UsedName(doActionInRoom,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main2$package,[Default]), UsedName(hello,[Default]), UsedName(main2$package;init;$,[Default]), UsedName(mainRoom,[Default]), UsedName(clone,[Default]), UsedName(desk,[Default]), UsedName(==,[Default]))), NamesChange(text_adventure2.SenseProps$,ModifiedNames(changes = UsedName($lessinit$greater$default$2,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(smell,[Default]), UsedName(SenseProps,[Default]), UsedName(wait,[Default]), UsedName($lessinit$greater$default$3,[Default]), UsedName(notify,[Default]), UsedName(hear,[Default]), UsedName(look,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(Object;init;,[Default]), UsedName(equals,[Default]), UsedName($lessinit$greater$default$5,[Default]), UsedName(asInstanceOf,[Default]), UsedName($lessinit$greater$default$4,[Default]), UsedName(SenseProps;init;$,[Default]), UsedName($lessinit$greater$default$1,[Default]), UsedName(clone,[Default]), UsedName(touch,[Default]), UsedName(taste,[Default]), UsedName(SenseProps;init;,[Default]), UsedName(==,[Default]))), NamesChange(text_adventure2.Room$,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(copy$default$3,[Default]), UsedName(Room,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Room;init;$,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(hashCode,[Default]), UsedName(itemNotFoundMsg,[Default]), UsedName(HasItems;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Named;init;,[Default]), UsedName(eq,[Default]), UsedName(Product;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(wait,[Default]), UsedName(Room;init;,[Default]), UsedName(getItem,[Default]), UsedName(Sensible;init;,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(_3,[Default]), UsedName(items,[Default]), UsedName(##,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(fromProduct,[Default]), UsedName(Object;init;,[Default]), UsedName(senseProps,[Default]), UsedName(_2,[Default]), UsedName(equals,[Default]), UsedName(sense,[Default]), UsedName(productArity,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(_1,[Default]), UsedName(productPrefix,[Default]), UsedName(Serializable;init;,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(Mirror;init;,[Default]))), NamesChange(text_adventure.ValidCommand$,ModifiedNames(changes = UsedName(ValidCommand,[Default]), UsedName(Exit,[Default]), UsedName(Quit,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(Look_Tests, CommandTests, Test1, Test1$package, ValidateTests)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set(CommandTests, ValidateTests, Look_Tests, Test1$package)[0m
[0m[[0m[0mdebug[0m] [0m[0mall 1 sources are invalidated[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Look_Tests, CommandTests, Test1, Test1$package, ValidateTests[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to C:\Users\krisd\Documents\Programming\Scala\text-adventure\text-adventure\target\scala-3.1.0\test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mReturning already retrieved and compiled bridge: C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-sbt-bridge\3.1.0\scala3-sbt-bridge-3.1.0.jar.[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 36839b8f for Scala Compiler version 3.1.0[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-library_3\3.1.0\scala3-library_3-3.1.0.jar;C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.6\scala-library-2.13.6.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\krisd\Documents\Programming\Scala\text-adventure\text-adventure\target\scala-3.1.0\test-classes;C:\Users\krisd\Documents\Programming\Scala\text-adventure\text-adventure\target\scala-3.1.0\classes;C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\novocode\junit-interface\0.11\junit-interface-0.11.jar;C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\dev\zio\zio-prelude_3\1.0.0-RC5\zio-prelude_3-1.0.0-RC5.jar;C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\junit\junit\4.11\junit-4.11.jar;C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-sbt\test-interface\1.0\test-interface-1.0.jar;C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\dev\zio\zio_3\1.0.8\zio_3-1.0.8.jar;C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\dev\zio\zio-test_3\1.0.8\zio-test_3-1.0.8.jar;C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\dev\zio\zio-stacktracer_3\1.0.8\zio-stacktracer_3-1.0.8.jar;C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\dev\zio\izumi-reflect_3\1.1.2\izumi-reflect_3-1.1.2.jar;C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\dev\zio\zio-streams_3\1.0.8\zio-streams_3-1.0.8.jar;C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\portable-scala\portable-scala-reflect_2.13\1.1.1\portable-scala-reflect_2.13-1.1.1.jar;C:\Users\krisd\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\dev\zio\izumi-reflect-thirdparty-boopickle-shaded_3\1.1.2\izumi-reflect-thirdparty-boopickle-shaded_3-1.1.2.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 0.6767297 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
